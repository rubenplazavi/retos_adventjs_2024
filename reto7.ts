/**
 * Â¡El grinch ðŸ‘¹ ha pasado por el taller de Santa Claus! Y menudo desastre ha montado. Ha cambiado el orden de algunos paquetes, por lo que los envÃ­os no se pueden realizar.

Por suerte, el elfo Pheralb ha detectado el patrÃ³n que ha seguido el grinch para desordenarlos. Nos ha escrito las reglas que debemos seguir para reordenar los paquetes. Las instrucciones que siguen son:

    RecibirÃ¡s un string que contiene letras y parÃ©ntesis.
    Cada vez que encuentres un par de parÃ©ntesis, debes voltear el contenido dentro de ellos.
    Si hay parÃ©ntesis anidados, resuelve primero los mÃ¡s internos.
    Devuelve el string resultante con los parÃ©ntesis eliminados, pero con el contenido volteado correctamente.

Nos ha dejado algunos ejemplos:

fixPackages('a(cb)de')
// âžž "abcde"
// Volteamos "cb" dentro de los parÃ©ntesis

fixPackages('a(bc(def)g)h')
// âžž "agdefcbh"
// 1Âº volteamos "def" â†’ "fed", luego volteamos "bcfedg" â†’ "gdefcb"

fixPackages('abc(def(gh)i)jk')
// âžž "abcighfedjk"
// 1Âº volteamos "gh" â†’ "hg", luego "defhgi" â†’ "ighfed"

fixPackages('a(b(c))e')
// âžž "acbe"
// 1Âº volteamos "c" â†’ "c", luego "bc" â†’ "cb"

 */

/** -------------------- ------------------------ */

// NOTA******** hay que guardar el indice del siguiente nÃºmero al parentesis...
//........... pero como hacer si hay muchos parentesis seguidos????????????? ej: a(bc(((de)eope)lÃ±e))

//-------------------- SoluciÃ³n de 2 estrellas ------------------ 
//Mejoras a hacer... se puede hacer mejor lo de los indicies, para detectar la siguiente letra y no modificar todo.. 
// de hecho.... se puede hacer mejor buscando y elemininado los ( y nos quedamos con en Ã­ndice, y reajustamos...
function fixPackages(packages: string): string {
    const pileOfIndexesParenthesis: Array<number> = [];
    let ordenatedPackage: string[] = packages.split('');
    let iterations: number;
    let aux: string;

    for(let i=0; i<packages.length; i++){
        if(packages[i]==='('){
            pileOfIndexesParenthesis.push(i+1);
            continue;
        }
        if(packages[i] === ')'){
            const rightParenthesis = i-1;
            const leftParethesis = pileOfIndexesParenthesis.pop();
            if(leftParethesis){
                iterations = Math.ceil((rightParenthesis-leftParethesis)/2);
                for(let j=0; j<iterations; j++){
                    aux = ordenatedPackage[leftParethesis+j]
                    ordenatedPackage[leftParethesis+j] = ordenatedPackage[rightParenthesis-j]
                    ordenatedPackage[rightParenthesis-j] = aux;
                }
            }
            
        }
    }
    let solucion = ordenatedPackage.join('');
    solucion = solucion.split('(').join('');
    solucion = solucion.split(')').join('');
    return solucion;
  }



  fixPackages('a(cb)de')
// âžž "abcde"
// Volteamos "cb" dentro de los parÃ©ntesis

fixPackages('a(bc(def)g)h')
// âžž "agdefcbh"
// 1Âº volteamos "def" â†’ "fed", luego volteamos "bcfedg" â†’ "gdefcb"

fixPackages('abc(def(gh)i)jk')
// âžž "abcighfedjk"
// 1Âº volteamos "gh" â†’ "hg", luego "defhgi" â†’ "ighfed"

fixPackages('a(b(c))e')
// âžž "acbe"
// 1Âº volteamos "c" â†’ "c", luego "bc" â†’ "cb"


  /**
   * function fixPackages(packages: string): string {
    // Code here
    const pileOfIndexesParenthesis: Array<number> = [];
    let ordenatedPackage: string[] = packages.split('');
    let iterations: number;
    let aux: string;

    for(let i=0; i<packages.length; i++){
        if(packages[i]==='('){
            pileOfIndexesParenthesis.push(i);
            continue;
        }
        if(packages[i] === ')'){
            const rightParenthesis = i;
            const leftParethesis = pileOfIndexesParenthesis.pop();
            if(leftParethesis){
                iterations = Math.ceil((rightParenthesis-leftParethesis)/2);
                for(let j=0; j<iterations; j++){
                    aux = ordenatedPackage[leftParethesis+j]
                    ordenatedPackage[leftParethesis+j] = ordenatedPackage[rightParenthesis-j]
                    ordenatedPackage[rightParenthesis-j] = aux;
                }
            }
            
        }
    }
    let solucion = ordenatedPackage.join('');
    solucion=solucion.split('(').join('');
    solucion=solucion.split(')').join('');
    return solucion;
  }

   */